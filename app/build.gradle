apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.tistory.deque.kotlinmvvmsample"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            multiDexEnabled true
            debuggable true
        }
    }
    flavorDimensions "flavors"
    productFlavors {
        dev {
            /* !개발모드에서만 적용-빌드최적화 */
            // 멀티 APK
            splits.abi.enable = false
            splits.density.enable = false
            // PNG 크기 최적화
            aaptOptions.cruncherEnabled = false
            // Crashlytics의 Build ID 업데이트 비활성화
            ext.alwaysUpdateBuildId = false
            // Crashlytics 보고서 사용 비활성화
            ext.enableCrashlytics = false
            // 참조 res 정의
            resConfigs("ko", "xxxhdpi")
//            applicationIdSuffix ".dev"
        }
        real {}
    }
    android.applicationVariants.all { variant ->
        def flavor = variant.getFlavorName()
        def buildType = variant.variantData.variantConfiguration.buildType.name

        if (flavor == 'dev') {

        } else {

        }

//        variant.outputs.all {
//            def appName = 'fint'
//            def version = variant.versionName
//            def formattedDate = new Date().format('yyMMdd_HHmm')
//            def newApkName = "${appName}_${flavor}_${buildType}_${version}_${formattedDate}.apk"
//            outputFileName = new File(newApkName)
//        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // androidx
    implementation 'androidx.appcompat:appcompat:1.2.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.core:core-ktx:1.2.0-rc01'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.2.0-alpha01"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "com.google.android.material:material:1.2.0-alpha04"
    implementation 'com.google.android.material:material:1.0.0'
    implementation "androidx.paging:paging-runtime-ktx:2.1.1"
    implementation 'androidx.cardview:cardview:1.0.0'

    // rxjava
    implementation "io.reactivex.rxjava2:rxjava:2.2.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"

    // koin
    implementation "org.koin:koin-androidx-scope:1.0.2"
    implementation "org.koin:koin-androidx-viewmodel:1.0.2"
    testImplementation 'org.koin:koin-test:1.0.2'

    // picasso
    implementation "com.squareup.picasso:picasso:2.5.2"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:2.5.0"
    implementation "com.squareup.retrofit2:converter-gson:2.5.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.5.0"
    implementation "com.squareup.retrofit2:retrofit-mock:2.4.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.9.1"

    // room
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    kapt 'android.arch.persistence.room:compiler:1.1.1'

    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "android.arch.work:work-runtime-ktx:1.0.1"

    // livedata
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    kapt 'android.arch.lifecycle:compiler:1.1.1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

task _demoApkUpload(dependsOn: 'crashlyticsUploadDistributionInspectionDebug') << {}
tasks.whenTaskAdded { task ->
    if (task.name == "crashlyticsUploadDistributionInspectionDebug") {
        ext.betaDistributionNotifications = true
        ext.betaDistributionReleaseNotes = "beta"
//        ext.betaDistributionEmails="sc.lee@dco.com"
        ext.betaDistributionGroupAliases = "aos_r"
        task.dependsOn assembleInspectionDebug
    }
}